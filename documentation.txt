====================================================================================
LSLDC COLO REQUEST APP DOCUMENTATION UPDATED 8/17/17 DEVELOPED BY ANDREW CHALFANT - CHALFANT@UMASS.EDU - ANDREWLCHALFANT@GMAIL.COM

CURRENTLY RUNNING:
Apache 2.4.10
Debian 8.9 with Exim 4.82_4
Django 1.11.4
JQuery - 1.11.2
Python 3.4.2
mod_wsgi 4.3.0


CURRENT BUGS:
Downloading Excel Spreadsheet Data via the COLO portal will not work in Firefox
Submitting invalid email addresses in any of the sites forms will result in a 500 Error

====================================================================================
1. BASIC:
The files used in the LSLDC COLO Request App Site can be found on dj-1.www.umass.edu in the directory /var/www/html/COLOSite. 

This folder contains most noticeably:
‘colo_env’ - a folder holding the Django virtual environment settings
‘COLOSite’ - a folder holding the settings for the whole site, in which the requestApp lives
‘documentation.txt’ - a copy of this documentation
‘db.sqlite3’ - SQLite database file used to store requester information
‘requestApp’ - a folder holding the app settings 

2. TEMPLATES:
Individual pages are served by ‘requestApp/views.py’ which provides Django functionality and serves the CSS templates found in ‘requestApp/static’ and HTML templates found in ‘requestApp/templates’. In total, there are four error templates, six page templates, and six email templates.

Email templates are converted directly to text, so no HTML formatting can be included in their make up.
Error templates are displayed by Django automatically when an error occurs. Their files live outside of the ‘requestApp’ templates. 
Page templates utilize CSS and Javascript files found in the ‘requestApp/static’ folder.

3. MODELS:
Requester data is stored as a ‘colo user’ model which is generated by the input received on the home page of the site. However a few fields are generated automatically.
‘man_approved’ - which is marked to TRUE when their manager confirms their request
‘COLO_approved’- which is marked to TRUE when a Data Center Ops Manager confirms their request
‘time’ - filled with the date of their request
‘tracker’ - uses the UUID system to generate a unique tracking number

4. FORMS:
All input is received through the Django ‘forms.py’ file. The Request App uses 3 different forms, listed below.

‘COLOApprovalForm’ - takes an argument of a 36 digit tracking number
‘COLODeletionForm’ - takes an argument of a 36 digit tracking number
‘PostForm’ - has 8 editable fields that are initialized by a requester’s data

PostForm has a variety of custom validators which ensure input will be valid. These validators can be edited, for example to add more allowable email addresses, in the clean method of the PostForm class in ‘forms.py’

5. VIEWS:
There are 6 different views, located in ‘requestApp/views.py’, which house the functionality of the site. The URL mappings of these views can be found in the ‘requestApp/urls.py’ file.

‘home’ -  Home page which houses the PostForm, sends an email receipt to the requester, and creates a confirmation site for the requester’s manager and notifies them by email.
‘complete’ - a simple view which displays the ‘employee_complete.html’ template
‘manager’ - page only accessible via email link sent to the requester’s manager (URL is composed of a unique token and the request tracking number). View will change the ‘man_approved’ field of the request to TRUE or delete the request from the database, depending on if the manager clicks the ‘Approve’ or ‘Deny’ button. Approving request will send a receipt email to the manager and a ‘New Request’ email to LSLDC Ops.
‘manager_complete’ - a simple view which displays the ‘manager_complete.html’ template
‘manager_denied’ - a simple view which displays the ‘manager_denied.html’ template
‘COLO’ - This site is only accessible by LSLDC COLO Ops Staff and serves as the admin site for requests. view changes the ‘COLO_approved” field of a ‘colo user’ model to TRUE or deletes the model from the database, depending on if the ‘Approve’ or ‘Deny’ button is clicked. Approving a request will send a notification email to the requester as well as Mark Harrison to enter the request data in CCURE. This view also creates two lists for models with their ‘COLO_approved’ field marked as TRUE and for those in which it is false. These lists are used to generate the counters displaying how many pending/approved requests there are.

====================================================================================
WORK FLOW:
Requester: The requester will visit the home page, currently ‘dj-1.www.umass.edu/lsldc/‘ and enter their information in order to request access to the LSLDC. There are two hoverable tooltips on this home page. One next to ‘Employee Phone Number’ instructing the requester to enter their phone number as a integer without formatting and one next to ‘UCard ID’ which shows how to find an UCard ID. If any of the information entered is incorrect (e.g a 12 digit phone number) the site will raise a custom validation error and ask the requester to re-input their information. A list of the custom validators can be found in the ‘forms.py’ file. Upon valid submission of the form, the requester will receive a confirmation email with their confirmation number and instructions on how their request will proceed. A second email is sent to the requester’s manager.  

Approving Manager: Upon valid requester submission, the requester’s manager will receive an email with information about the request and a link to a unique approval/removal page. Once at this page, manager’s will either confirm or deny the request and then be redirected to an approval or denial screen. Approving a request changes the request’s ‘man_approved’ field to TRUE and will send an email to LSLDC OPs informing them of the new request as well an email receipt to the requester’s manager. Denying a request will delete the request from the database. 
 
LSLDC OPs: To login to the LSLDC Admin page, LSLDC OPs Managers will visit ‘dj-1.www.umass.edu/colo'. To approve requests, OPs managers will input the tracking number of a request and click the ‘Approve’ button. To remove requests, OPs managers will input the tracking number of a request and click the ‘Remove’ button. Removing requests is intended for old, incorrect, or incomplete requests. Removing a request will delete all information about the request from the database. Approving a request will change the mode’s ‘COLO_approved’ field to TRUE and will send an email to the requester notifying them of their confirmation and to Mark Harrison with the requester’s name and Card ID so may add them to the CCURE application. LSLDC OPs managers also have the option to export pending or approved requests to an excel spreadsheet.

Web Admin: The Django admin site can be accessed by attaching ‘/admin/ to the end of the site’s home, currently ‘dj-1.www.umass.edu/admin'. The Admin site can be useful for handling large numbers of requests, changing accidental errors in requester input, and exporting data to Excel spreadsheets all of which can be found in the ‘Colo users’ section under the ‘REQUESTAPP’ title. 

For full access inside the Admin site, users should be registered under the ‘UMass Amherst IT Administrators’ group.

====================================================================================